{"version":3,"sources":["redux/types.js","redux/reducers/listReducer.js","redux/reducers/rootReducer.js","components/navbar/Navbar.js","components/projectForm/ProjectForm.js","redux/testList.js","components/detailPanel/DetailPanel.js","components/filteroutBox/FilterOutBox.js","components/shrinkableList/ShrinkableList.js","containers/ShrinkableList.js","redux/actions/listActions.js","app/App.js","serviceWorker.js","index.js"],"names":["fetchListItems","initState","listElements","filterString","activeItem","rootReducer","combineReducers","list","state","arguments","length","undefined","action","type","Object","objectSpread","payload","Navbar","react_default","a","createElement","className","this","props","children","Component","ProjectForm","class","for","id","placeholder","key","val","DetailPanel","FilterOutBox","_ref","onChange","e","target","value","ShrinkableList","toggleDetail","_this$props","_this","listStatus","setActive","fetchList","_this$props2","setFilter","actualItems","filter","element","includes","onClick","filteroutBox_FilterOutBox","map","el","react_transition_group","in","timeout","classNames","unmountOnExit","connect","dispatch","setActiveItem","setFilterString","App","BrowserRouter","navbar_Navbar","Link","to","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_app_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c4ea60fc.chunk.js","sourcesContent":["export const fetchListItems = {\n  REQUEST: \"FETCH_LIST_REQUEST\",\n  SUCCESS: \"FETCH_LIST_SUCCESS\",\n  FAILURE: \"FETCH_LIST_FAILURE\"\n};\n\nexport const SET_ACTIVE_ITEM = \"SET_ACTIVE_ITEM\";\nexport const SET_FILTER_STRING = \"SET_FILTER_STRING\";\n","import { fetchListItems, SET_ACTIVE_ITEM, SET_FILTER_STRING } from \"../types\";\n\nconst initState = {\n  listElements: [],\n  filterString: \"\",\n  activeItem: null\n};\n\nexport const listReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_ITEM:\n      return { ...state, activeItem: action.payload };\n    case SET_FILTER_STRING:\n      return { ...state, filterString: action.payload };\n    case fetchListItems.SUCCESS:\n      return { ...state, listElements: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n\nimport { listReducer } from \"./listReducer\";\n\nexport const rootReducer = combineReducers({\n  list: listReducer\n});\n","import React, { Component } from \"react\";\n\nimport \"./navbar.scss\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <section className=\"navbar-section\">first sect</section>\n        <section className=\"navbar-center\">centr sect</section>\n        <section className=\"navbar-section\">{this.props.children}</section>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass ProjectForm extends Component {\n  render() {\n    return (\n      <form class=\"form-horizontal\">\n        <div class=\"form-group\">\n          <div class=\"col-3 col-sm-12\">\n            <label class=\"form-label\" for=\"input-example-1\">\n              Name\n            </label>\n          </div>\n          <div class=\"col-9 col-sm-12\">\n            <input\n              class=\"form-input\"\n              type=\"text\"\n              id=\"input-example-1\"\n              placeholder=\"Name\"\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ProjectForm;\n","export const list = [\n  { key: \"aaa12\", val: \"FIRST ELEMENT\" },\n  { key: \"aaa13\", val: \"SECOND ELEMENT\" },\n  { key: \"aaa14\", val: \"THIRD ELEMENT\" },\n  { key: \"aaa15\", val: \"FOURTH ELEMENT\" },\n  { key: \"aaa16\", val: \"FIFTH ELEMENT\" }\n];\n","import React from \"react\";\n\nexport default function DetailPanel(props) {\n  return <section class=\"detail-panel\">{props.children}</section>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FilterOutBox = ({ filterString }) => {\n  return (\n    <input\n      className=\"input-box\"\n      id=\"input-box\"\n      onChange={e => filterString(e.target.value)}\n    />\n  );\n};\n\nFilterOutBox.propTypes = {\n  filterString: PropTypes.func.isRequired\n};\nexport default FilterOutBox;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport DetailPanel from \"../detailPanel/DetailPanel\";\nimport FilterOutBox from \"../filteroutBox/FilterOutBox\";\n\nimport \"./shrinkable-list.scss\";\nclass ShrinkableList extends Component {\n  componentDidMount() {\n    this.props.fetchList();\n  }\n\n  toggleDetail = e => {\n    if (e.target.id === \"input-box\") return;\n    const { listStatus, setActive } = this.props;\n    if (e.target.id === listStatus.activeItem) {\n      setActive(null);\n    } else {\n      setActive(e.target.id);\n    }\n  };\n\n  render() {\n    const { listStatus, setFilter } = this.props;\n    const actualItems = listStatus.listElements.filter(element =>\n      element.val.includes(listStatus.filterString)\n    );\n    return (\n      <article className=\"shrinkable-list-container\">\n        <ul onClick={this.toggleDetail}>\n          <FilterOutBox filterString={setFilter} />\n          {actualItems.map(el => (\n            <li key={el.key} id={el.key}>\n              {el.val}\n            </li>\n          ))}\n        </ul>\n        <CSSTransition\n          in={!!listStatus.activeItem}\n          timeout={800}\n          classNames=\"slide\"\n          unmountOnExit\n        >\n          <DetailPanel>{listStatus.activeItem} </DetailPanel>\n        </CSSTransition>\n      </article>\n    );\n  }\n}\n\nShrinkableList.propTypes = {\n  setActive: PropTypes.func.isRequired,\n  fetchList: PropTypes.func.isRequired,\n  listStatus: PropTypes.shape({\n    listElements: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string,\n        val: PropTypes.string\n      })\n    ).isRequired,\n    filterString: PropTypes.string.isRequired,\n    activeItem: PropTypes.string\n  }).isRequired\n};\n\nexport default ShrinkableList;\n","import { connect } from \"react-redux\";\nimport {\n  fetchList,\n  setActiveItem,\n  setFilterString\n} from \"../redux/actions/listActions\";\n\nimport ShrinkableList from \"../components/shrinkableList/ShrinkableList\";\n\nconst mapStateToProps = state => ({\n  listStatus: state.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchList: () => dispatch(fetchList()),\n  setActive: id => dispatch(setActiveItem(id)),\n  setFilter: filter => dispatch(setFilterString(filter))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShrinkableList);\n","import { fetchListItems, SET_ACTIVE_ITEM, SET_FILTER_STRING } from \"../types\";\n\nimport { list } from \"../testList\";\n\nexport const fetchList = () => dispatch => {\n  return dispatch({ type: fetchListItems.SUCCESS, payload: list });\n};\n\nexport const setFilterString = filter => dispatch =>\n  dispatch({\n    type: SET_FILTER_STRING,\n    payload: filter\n  });\n\nexport const setActiveItem = id => dispatch => {\n  return dispatch({ type: SET_ACTIVE_ITEM, payload: id });\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Navbar from \"../components/navbar/Navbar\";\nimport ProjectForm from \"../components/projectForm/ProjectForm\";\nimport ShrinkableList from \"../containers/ShrinkableList\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"app-container\">\n          <header>\n            <Navbar>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/create-form\">New Form</Link>\n            </Navbar>\n          </header>\n          <main>\n            <Route path=\"/\" exact component={ShrinkableList} />\n            <Route path=\"/create-form\" exact component={ProjectForm} />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport { rootReducer } from \"./redux/reducers/rootReducer\";\n\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}